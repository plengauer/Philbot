name: 'Publish Debian Root'

env:
  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: 'http://${{ secrets.PARENT_DOMAIN }}:4318/v1/metrics'
  OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: 'http://${{ secrets.PARENT_DOMAIN }}:4318/v1/logs'
  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: 'http://${{ secrets.PARENT_DOMAIN }}:4318/v1/traces'

on:
  push:
    branches: main
    paths:
      - 'Deployment/Root/DEBIAN/control'
      
jobs:
  diff:
    runs-on: ubuntu-latest
    outputs:
      dirty: ${{ steps.git-diff.outputs.dirty }}
    steps:
      - uses: plengauer/opentelemetry-bash/actions/instrument/job@v5.24.4
      - uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0
      - id: git-diff
        run: |
          echo dirty="$(git diff "$GITHUB_SHA"^1 "$GITHUB_SHA" -- Deployment/Root/DEBIAN/control | grep -E "^\+" | grep -q 'Version: ' && echo true || echo false)" >> "$GITHUB_OUTPUT"

  publish:
    if: needs.diff.outputs.dirty == 'true'
    needs: diff
    runs-on: ubuntu-latest
    permissions:
      contents: write
    defaults:
      run:
        working-directory: ./Deployment/Root
    steps:
      - uses: plengauer/opentelemetry-bash/actions/instrument/job@v5.24.4
      - uses: actions/checkout@v5.0.0
      - run: sudo apt-get update && sudo apt-get install devscripts debhelper
      - run: echo "version=$(cat ./DEBIAN/control | grep 'Version' | awk -F\  '{print $2}')" >> "$GITHUB_OUTPUT"
        id: version
      - run: dpkg-deb --root-owner-group -Zgzip --build . ../package.deb
      - uses: actions/create-release@v1.1.4
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
        with:
          tag_name: deployment-root-v${{ steps.version.outputs.version }}
          release_name: Release Deployment Root v${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
      - uses: actions/upload-release-asset@v1.0.2
        id: upload-release-asset
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Deployment/package.deb
          asset_name: philbot_deployment_root_${{ steps.version.outputs.version }}.deb
          asset_content_type: application/octet-stream
