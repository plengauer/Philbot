#!/bin/bash
set -e
. /usr/share/debconf/confmodule

config() {
    db_get philbot/"$@"
    echo "$@=$RET"
}

echo $(config DISCORD_API_TOKEN) >> /etc/philbot-containerized/environment.properties.scheduler
echo $(config DISCORD_API_TOKEN) >> /etc/philbot-containerized/environment.properties.discordgateway2http
echo $(config DISCORD_API_TOKEN) >> /etc/philbot-containerized/environment.properties.backend
echo $(config DISCORD_API_TOKEN) >> /etc/philbot-containerized/environment.properties.voice
echo $(config OPENTELEMETRY_TRACES_API_ENDPOINT) >> /etc/philbot-containerized/environment.properties.scheduler
echo $(config OPENTELEMETRY_TRACES_API_ENDPOINT) >> /etc/philbot-containerized/environment.properties.discordgateway2http
echo $(config OPENTELEMETRY_TRACES_API_ENDPOINT) >> /etc/philbot-containerized/environment.properties.backend
echo $(config OPENTELEMETRY_TRACES_API_ENDPOINT) >> /etc/philbot-containerized/environment.properties.voice
echo $(config OPENTELEMETRY_TRACES_API_TOKEN) >> /etc/philbot-containerized/environment.properties.scheduler
echo $(config OPENTELEMETRY_TRACES_API_TOKEN) >> /etc/philbot-containerized/environment.properties.discordgateway2http
echo $(config OPENTELEMETRY_TRACES_API_TOKEN) >> /etc/philbot-containerized/environment.properties.backend
echo $(config OPENTELEMETRY_TRACES_API_TOKEN) >> /etc/philbot-containerized/environment.properties.voice
echo $(config OPENTELEMETRY_METRICS_API_ENDPOINT) >> /etc/philbot-containerized/environment.properties.scheduler
echo $(config OPENTELEMETRY_METRICS_API_ENDPOINT) >> /etc/philbot-containerized/environment.properties.discordgateway2http
echo $(config OPENTELEMETRY_METRICS_API_ENDPOINT) >> /etc/philbot-containerized/environment.properties.backend
echo $(config OPENTELEMETRY_METRICS_API_ENDPOINT) >> /etc/philbot-containerized/environment.properties.voice
echo $(config OPENTELEMETRY_METRICS_API_TOKEN) >> /etc/philbot-containerized/environment.properties.scheduler
echo $(config OPENTELEMETRY_METRICS_API_TOKEN) >> /etc/philbot-containerized/environment.properties.discordgateway2http
echo $(config OPENTELEMETRY_METRICS_API_TOKEN) >> /etc/philbot-containerized/environment.properties.backend
echo $(config OPENTELEMETRY_METRICS_API_TOKEN) >> /etc/philbot-containerized/environment.properties.voice
echo $(config DISCORD_CLIENT_ID) >> /etc/philbot-containerized/environment.properties.backend
echo $(config OWNER_DISCORD_USER_ID) >> /etc/philbot-containerized/environment.properties.backend
echo $(config OPENAI_API_TOKEN) >> /etc/philbot-containerized/environment.properties.backend
echo $(config GCP_T2S_TOKEN) >> /etc/philbot-containerized/environment.properties.backend
echo $(config GOOGLEAI_COST_LIMIT) >> /etc/philbot-containerized/environment.properties.backend
echo $(config SPEECHIFY_TOKEN) >> /etc/philbot-containerized/environment.properties.backend
echo $(config SPEECHIFY_COST_LIMIT) >> /etc/philbot-containerized/environment.properties.backend
echo $(config RIOT_API_TOKEN) >> /etc/philbot-containerized/environment.properties.backend
echo $(config RIOT_TFT_API_TOKEN) >> /etc/philbot-containerized/environment.properties.backend
echo $(config RAPID_API_TOKEN) >> /etc/philbot-containerized/environment.properties.backend
echo $(config APEX_LEGENDS_API_TOKEN) >> /etc/philbot-containerized/environment.properties.backend
echo $(config TRACKER_GG_API_TOKEN) >> /etc/philbot-containerized/environment.properties.backend
echo $(config YOUTUBE_API_TOKEN) >> /etc/philbot-containerized/environment.properties.backend
echo $(config LINK_OBSERVABILITY) >> /etc/philbot-containerized/environment.properties.backend

iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080
iptables -t nat -A PREROUTING -p tcp --dport 443 -j REDIRECT --to-port 4443
bash -c 'iptables-save > /etc/iptables/rules.v4'

start() {
    name=$1
    docker run \
        --name $name \
        --restart unless-stopped \
        --network=host \
        --env-file /etc/philbot-containerized/environment.properties.$name \
        "${@:3}" \
        --init philipplengauer/philbot-$name:latest
    # TODO remove host network, map ports properly, and use bridge network interface so communication works
}

start voice \
    --env PORT=12345 \
    --env STATE_STORAGE_DIRECTORY=/sessions \
    --mount type=bind,source=/var/lib/philbot/voice_sessions,target=/sessions \
    --env CACHE_DIRECTORY=/cache \
    --mount type=bind,source=/var/lib/philbot/audio_cache,target=/cache

start backend \
    --env PORT=8080 \
    --env VOICE_PORT=12345 \
    --env MEMORY_DIRECTORY=/memory \
    --mount type=bind,source=/var/lib/philbot/memory,target=/memory

start discordgateway2http \
    --env SHARD_INDEX=0 --env SHARD_COUNT=1 \
    --env PORT=8081 \
    --env STATE_STORAGE_DIRECTORY=/sessions \
    --mount type=bind,source=/var/lib/philbot/gateway_sessions,target=/sessions

start scheduler \
    --env CONFIG_FILE=/config.properties \
    --mount type=bind,source=/etc/config.properties.scheduler,target=/config.properties,readonly