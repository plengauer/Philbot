#!/bin/bash -e

destination_directory=/var/lib/philbot
. /usr/share/debconf/confmodule

value() {
    db_get philbot/"$"
    echo "$RET"
}

config() {
    value "$*" | xargs -I {} echo "$*={}"
}

kvp_deployment=$(config DEPLOYMENT | sed 's/DEPLOYMENT/deployment.environment/g')
kvp_application_id=$(config DISCORD_CLIENT_ID | sed 's/DISCORD_CLIENT_ID/discord.application.id/g')
resource_attributes=OTEL_RESOURCE_ATTRIBUTES=$kvp_application_id,$kvp_deployment

echo $resource_attributes >> $destination_directory/environment.properties.selfmonitoring
echo $resource_attributes >> $destination_directory/environment.properties.scheduler
echo $resource_attributes >> $destination_directory/environment.properties.discordgateway2http
echo $resource_attributes >> $destination_directory/environment.properties.discordgateway2httpmaster
echo $resource_attributes >> $destination_directory/environment.properties.backend
echo $resource_attributes >> $destination_directory/environment.properties.voice
echo $resource_attributes >> $destination_directory/environment.properties.deployment
config DISCORD_API_TOKEN >> $destination_directory/environment.properties.scheduler
config DISCORD_API_TOKEN >> $destination_directory/environment.properties.discordgateway2http
config DISCORD_API_TOKEN >> $destination_directory/environment.properties.discordgateway2httpmaster
config DISCORD_API_TOKEN >> $destination_directory/environment.properties.backend
config DISCORD_API_TOKEN >> $destination_directory/environment.properties.voice
config DISCORD_API_TOKEN >> $destination_directory/environment.properties.deployment
config OPENTELEMETRY_TRACES_API_ENDPOINT >> $destination_directory/environment.properties.scheduler
config OPENTELEMETRY_TRACES_API_ENDPOINT >> $destination_directory/environment.properties.discordgateway2http
config OPENTELEMETRY_TRACES_API_ENDPOINT >> $destination_directory/environment.properties.discordgateway2httpmaster
config OPENTELEMETRY_TRACES_API_ENDPOINT >> $destination_directory/environment.properties.backend
config OPENTELEMETRY_TRACES_API_ENDPOINT >> $destination_directory/environment.properties.voice
config OPENTELEMETRY_TRACES_API_ENDPOINT >> $destination_directory/environment.properties.deployment
config OPENTELEMETRY_TRACES_API_TOKEN >> $destination_directory/environment.properties.scheduler
config OPENTELEMETRY_TRACES_API_TOKEN >> $destination_directory/environment.properties.discordgateway2http
config OPENTELEMETRY_TRACES_API_TOKEN >> $destination_directory/environment.properties.discordgateway2httpmaster
config OPENTELEMETRY_TRACES_API_TOKEN >> $destination_directory/environment.properties.backend
config OPENTELEMETRY_TRACES_API_TOKEN >> $destination_directory/environment.properties.voice
config OPENTELEMETRY_TRACES_API_TOKEN >> $destination_directory/environment.properties.deployment
config OPENTELEMETRY_METRICS_API_ENDPOINT >> $destination_directory/environment.properties.scheduler
config OPENTELEMETRY_METRICS_API_ENDPOINT >> $destination_directory/environment.properties.discordgateway2http
config OPENTELEMETRY_METRICS_API_ENDPOINT >> $destination_directory/environment.properties.discordgateway2httpmaster
config OPENTELEMETRY_METRICS_API_ENDPOINT >> $destination_directory/environment.properties.backend
config OPENTELEMETRY_METRICS_API_ENDPOINT >> $destination_directory/environment.properties.voice
config OPENTELEMETRY_METRICS_API_ENDPOINT >> $destination_directory/environment.properties.deployment
config OPENTELEMETRY_METRICS_API_TOKEN >> $destination_directory/environment.properties.scheduler
config OPENTELEMETRY_METRICS_API_TOKEN >> $destination_directory/environment.properties.discordgateway2http
config OPENTELEMETRY_METRICS_API_TOKEN >> $destination_directory/environment.properties.discordgateway2httpmaster
config OPENTELEMETRY_METRICS_API_TOKEN >> $destination_directory/environment.properties.backend
config OPENTELEMETRY_METRICS_API_TOKEN >> $destination_directory/environment.properties.voice
config OPENTELEMETRY_METRICS_API_TOKEN >> $destination_directory/environment.properties.deployment
config OPENTELEMETRY_LOGS_API_ENDPOINT >> $destination_directory/environment.properties.scheduler
config OPENTELEMETRY_LOGS_API_ENDPOINT >> $destination_directory/environment.properties.discordgateway2http
config OPENTELEMETRY_LOGS_API_ENDPOINT >> $destination_directory/environment.properties.discordgateway2httpmaster
config OPENTELEMETRY_LOGS_API_ENDPOINT >> $destination_directory/environment.properties.backend
config OPENTELEMETRY_LOGS_API_ENDPOINT >> $destination_directory/environment.properties.voice
config OPENTELEMETRY_LOGS_API_ENDPOINT >> $destination_directory/environment.properties.deployment
config OPENTELEMETRY_LOGS_API_TOKEN >> $destination_directory/environment.properties.scheduler
config OPENTELEMETRY_LOGS_API_TOKEN >> $destination_directory/environment.properties.discordgateway2http
config OPENTELEMETRY_LOGS_API_TOKEN >> $destination_directory/environment.properties.discordgateway2httpmaster
config OPENTELEMETRY_LOGS_API_TOKEN >> $destination_directory/environment.properties.backend
config OPENTELEMETRY_LOGS_API_TOKEN >> $destination_directory/environment.properties.voice
config OPENTELEMETRY_LOGS_API_TOKEN >> $destination_directory/environment.properties.deployment
config DISCORD_CLIENT_ID >> $destination_directory/environment.properties.backend
config OWNER_DISCORD_USER_ID >> $destination_directory/environment.properties.backend
config PUBLIC_URL >> $destination_directory/environment.properties.backend
config OPENAI_API_TOKEN >> $destination_directory/environment.properties.backend
config OPENAI_COST_LIMIT >> $destination_directory/environment.properties.backend
config GCP_T2S_TOKEN >> $destination_directory/environment.properties.backend
config GOOGLEAI_COST_LIMIT >> $destination_directory/environment.properties.backend
config SPEECHIFY_API_TOKEN >> $destination_directory/environment.properties.backend
config SPEECHIFY_COST_LIMIT >> $destination_directory/environment.properties.backend
config RIOT_API_TOKEN >> $destination_directory/environment.properties.backend
config RIOT_TFT_API_TOKEN >> $destination_directory/environment.properties.backend
config RAPID_API_TOKEN >> $destination_directory/environment.properties.backend
config APEX_LEGENDS_API_TOKEN >> $destination_directory/environment.properties.backend
config TRACKER_GG_API_TOKEN >> $destination_directory/environment.properties.backend
config YOUTUBE_API_TOKEN >> $destination_directory/environment.properties.backend
config LINK_OBSERVABILITY >> $destination_directory/environment.properties.backend

endpoint_logs="$(value OPENTELEMETRY_LOGS_API_ENDPOINT | rev | cut -d/ -f3- | rev)"
endpoint_metrics="$(value OPENTELEMETRY_METRICS_API_ENDPOINT | rev | cut -d/ -f3- | rev)"
endpoint_traces="$(value OPENTELEMETRY_TRACES_API_ENDPOINT | rev | cut -d/ -f3- | rev)"
header_logs="$(value OPENTELEMETRY_LOGS_API_TOKEN)"
header_metrics="$(value OPENTELEMETRY_METRICS_API_TOKEN)"
header_traces="$(value OPENTELEMETRY_TRACES_API_TOKEN)"
cat /var/lib/philbot-config/collector.yaml \
  | sed 's~\$ENDPOINT_LOGS~'"$endpoint_logs"'~g' \
  | sed 's~\$ENDPOINT_METRICS~'"$endpoint_metrics"'~g' \
  | sed 's~\$ENDPOINT_TRACES~'"$endpoint_traces"'~g' \
  | sed 's~\$HEADER_LOGS~'"$header_logs"'~g' \
  | sed 's~\$HEADER_METRICS~'"$header_metrics"'~g' \
  | sed 's~\$HEADER_TRACES~'"$header_traces"'~g' > $destination_directory/collector.yaml

exit 0
